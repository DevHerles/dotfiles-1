#!/bin/sh

# Usage:
# `record`: Ask for recording type via dmenu
# `record screencast`: Record both audio and screen
# `record video`: Record only screen
# `record audio`: Record only audio
#
# If there is already a running instance, user will be prompted to end it.

DMENU="dmenu"

updateicon() { \
  echo "$1" > ~/.recordingicon
}

killrecording() {
  recpid="$(cat ~/.recordingpid)"
  # kill with SIGTERM, allowing finishing touches.
  kill -15 "$recpid"
  rm -f ~/.recordingpid
  updateicon ""
  exit
}

  # "$HOME/vid/ScreenRecorder/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
screencast() { \
  ffmpeg -y \
  -f x11grab \
  -draw_mouse 1 \
  -framerate 30 \
  -s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
  -i :0.0+0,0 \
  -f pulse -i default \
  -c:a aac \
  -c:v libx264rgb -pix_fmt rgb24 -preset veryfast \
  -threads 0 \
  "$HOME/vid/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
  echo $! > ~/.recordingpid
  updateicon " REC "
}

  # "$HOME/vid/ScreenRecorder/video-$(date '+%y%m%d-%H%M-%S').mp4" &
video() { \
  ffmpeg \
  -f x11grab \
  -draw_mouse 1 \
  -framerate 30 \
  -s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
  -i :0.0+0,0 \
  -c:v libx264 -pix_fmt yuv420p -preset veryfast -q:v 1 \
  -threads 0 \
  "$HOME/vid/video-$(date '+%y%m%d-%H%M-%S').mp4" &
  echo $! > ~/.recordingpid
  updateicon " REC "
}

audio() { \
  ffmpeg \
  -f pulse -i default \
  -c:a flac \
  "$HOME/vid/audio-$(date '+%y%m%d-%H%M-%S').flac" &
  echo $! > ~/.recordingpid
  updateicon " REC "
}

askrecording() { \
  choice=$(printf "screencast\\nvideo\\naudio" | $DMENU -p "Record:")
  case "$choice" in
    screencast) screencast;;
    video) video;;
    audio) audio;;
  esac
}

asktoend() { \
  response=$(printf "no\\nyes" | $DMENU -p "End Recording:") &&
  [ "$response" = "yes" ] &&  killrecording
}

case "$1" in
  screencast) screencast;;
  audio) audio;;
  video) video;;
  *) ([ -f ~/.recordingpid ] && asktoend && exit) || askrecording;;
esac
